//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by CodeGen v{{GENERATOR_VERSION}}
//     Script: generate-code.bat (or generate-code.sh for Unix)
//     Timestamp: {{GENERATED_AT}}
//     Template: {{TEMPLATE_NAME}}
//     Target: {{RESULT_TYPE}} ({{TARGET_FRAMEWORK}})
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     regenerated. Consider modifying the template instead.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

using System.Runtime.CompilerServices;
using ZeroResult.Core.Errors;

namespace ZeroResult.Core.Models;

public {{Modifier}} partial struct {{ResultType}}<T, TError>
    where TError : IError
{
    private readonly T? _value;
    private readonly TError? _error;
    private readonly bool _isSuccess;

    /// <summary>
    /// Initializes a new instance of the <see cref="{{ResultType}}{T, TError}"/> struct with a successful value.
    /// </summary>
    /// <param name="value">The successful value of type <typeparamref name="T"/>.</param>
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    internal {{ResultType}}(T value)
    {
        _value = value;
        _error = default;
        _isSuccess = true;
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="{{ResultType}}{T, TError}"/> struct with an error.
    /// </summary>
    /// <param name="error">The error of type <typeparamref name="TError"/>.</param>
    [MethodImpl(MethodImplOptions.AggressiveInlining)]
    internal {{ResultType}}(TError error)
    {
        _value = default;
        _error = error;
        _isSuccess = false;
    }

    /// <summary>
    /// Indicates whether the result is successful.
    /// </summary>
    public bool IsSuccess
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => _isSuccess;
    }

    /// <summary>
    /// Indicates whether the result is a failure.
    /// </summary>
    public bool IsFailure
    {
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        get => !_isSuccess;
    }
}
